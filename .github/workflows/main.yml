name: UMS CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MONGODB_URI: mongodb://localhost:27017/test
  JWT_SECRET: test-secret
  NODE_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [faculty-service, student-service, attendance-service, examination-service]
        node-version: [18.x]
        mongodb-version: [6.0]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ matrix.service }}/package-lock.json

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm ci

      - name: Run tests
        working-directory: ${{ matrix.service }}
        run: npm test

      - name: Run linting
        working-directory: ${{ matrix.service }}
        run: npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [faculty-service, student-service, attendance-service, examination-service]

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.0'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
          echo "KUBECONFIG=$(pwd)/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Update Kubernetes deployments
        run: |
          for service in faculty-service student-service attendance-service examination-service; do
            kubectl set image deployment/$service $service=${{ secrets.DOCKERHUB_USERNAME }}/$service:${{ github.sha }} -n ums
          done

      - name: Verify deployments
        run: |
          for service in faculty-service student-service attendance-service examination-service; do
            kubectl rollout status deployment/$service -n ums
          done
